#!/bin/bash
#Description:
#    purpose: page-based testing, random write data to target raw device, and verify data
#    procedures: first, use the function randswsr in utest to random write in a range,
#               second, sequential read the data and verify, and we set the length of the write io is 7 pages.
#input parameters:
#    1st: target raw device
#    2nd: amount of data to write (in page unit)


#########################
#     include files     #
#########################

source ../common/config_test_env.sh
source ../common/common_func.sh
source ../common/common_global_var.sh

check_sofa_service
retval=$?
if [ "$retval" == 1 ]
then
    log_msg "$test_scfn: [INFO] sofa service is running, stop it."
    stop_sofasrv
fi

reset_sofasrv

start_sofasrv

#########################
#   setup testing para  #
#########################

target_dev=lfsm
amount_data=0

if [ $# -eq 1 ] ; then
    target_dev=$1
    get_disk_size $target_dev
    amount_data=$gDiskSize
elif [ $# -eq 2 ] ; then
    target_dev=$1
    get_disk_size $target_dev
    amount_data=$2
else
    target_dev=lfsm
    get_disk_size $target_dev
    amount_data=$gDiskSize
fi

#if amount_data >= disksize, amount_data = disksize
if [ $amount_data -ge $gDiskSize ] ; then
    amount_data=$gDiskSize
fi

log_msg "$test_scfn: [INFO] start testing with target dev = $target_dev, and amount data = $amount_data"

#########################
#  set other parameters #
#########################

allpage=$amount_data

log_msg "$test_scfn: [INFO] allpage = $allpage, test_tool = $test_tool"

#########################
#   start testing       #
#########################

err_ret=0

[ -f $test_log_file ] && rm -f $test_log_file


for ((i=1;i<=1;i=i+1))
do
	seed=$(($1010*$i))
	export utest_seed48=$(($seed+53))

	page=7
    log_msg "$test_scfn: [INFO]i=$i TEST: Page Random W Sequential R len=$page"
	range=$(($allpage-$page))

	$test_tool /dev/$target_dev randswsr $range $(($allpage/2)) 0 $page >> $test_log_file
    if [ $? -ne 0 ]; then
        log_msg "$test_scfn: [ERROR] test error, please check it"
        err_ret=1
        break
    fi

	cor_num=`awk -f "../common/check_correct_num.awk" $test_log_file`
	err=$(($range-$cor_num))
	log_msg "$test_scfn: [INFO]i=$i num_of_error=$err num_of_correct=$cor_num"
    if [ $err -ne 0 ]; then
        log_msg "$test_scfn: [ERROR] data is not correct!!, err = $err"
        log_msg "$test_scfn: [ERROR] Random wirte for $page pages is WRONG!!"
        err_ret=1
    fi
done

if [ "$err_ret" == 0 ]
then
    log_msg "$test_scfn: [INFO] test result ok"
    #TODO notify the caller or jenkins server that test is ok
else
    exit $err_ret
fi